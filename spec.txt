== TEM-8 ==

The TEM-8 is a general purpose, turing complete computer that utilizes a C
framework to emulate itself. It is intended for limited use as a programming
device used to teach how computers work.

== MEMORY ==

-> 0x0000 - 0x7fff : This is General Purpose ROM, used by the current program.
-> 0x8000 - 0xbfff : This is General Purpose RAM, used by the programmer/user.
-> 0xc000 - 0xc0ff : This is the Stack.
-> 0xc100 - 0xfffb : More General Purpose RAM
-> 0xfffc - 0xfffd : SP/(S)TACK (P)OINTER.
-> 0xfffe - 0xffff : PC/(P)ROGRAM (C)OUNTER.

== INSTRUCTIONS ==

[ ]: Not completed
[/]: Completed

00 : ADD REG, IMM16/REG -> REG = REG + IMM16/REG          [/]
01 : SUB REG, IMM16/REG -> REG = REG + IMM16/REG          [/]
02 : AND REG, IMM16/REG -> REG = REG & IMM16/REG          [/]
03 : OR  REG, IMM16/REG -> REG = REG | IMM16/REG          [/]
04 : NOR REG, IMM16/REG -> REG = ~(REG | IMM16/REG)       [/]
05 : CMP REG, IMM16/REG -> REG = REG - IMM16/REG          [/]
06 : PUSH REG           -> [++SP] = REG                   [/]
07 : POP REG            -> REG = [--SP]                   [/]
08 : LR  REG, IMM16/REG -> REG = IMM16/REG                [/]
09 : SR  REG, IMM16/HL  -> [*HL/IMM16] = REG              [/]
0A : MR  REG, REG       -> REG = REG                      [/]
0B : LDH IMM16/REG      -> H = IMM16/REG                  [/]
0C : LDL IMM16/REG      -> L = IMM16/REG                  [/]
0D : JNZ                -> Z != 0 ? PC = HL : NOP         [/]
0E : NOP                -> [++PC]                         [/]
0F : STOP               -> [PC = PC]**                    [/]

== MACROS ==
A macro is a little snippet of code stored with a variable name (V).
if the programmer wishes to re-use that snippet of code over and over
again within their program, all they must type is ".V". This signifies
to the compiler that a macro of name "V" should be pasted into the
output feed. This can be used to make very elegant looking code
easily.

To start a macro, simply type "@macro <macro_name>" into your program,
and you then must type the macro code beneath it. To end a macro
statement, type "@endmacro" - signifying to the compiler that the macro
has been completed.

CODE EXAMPLE:
    @macro test_macro
        ldh 80h
        ldl 20h
    @endmacro

    .test_macro

This code creates the macro "test_macro" and then lists 2 instructions
that then get pasted in on the line ".test_macro".